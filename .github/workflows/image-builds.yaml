---
name: Image Build

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
  release:
    types: ["published"]

jobs:
  build-image:
    name: Build Container (${{ matrix.platform }})
    runs-on: ${{ matrix.platform == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-latest'}}
    strategy:
      matrix:
        platform: ["amd64", "arm64"]
      fail-fast: false
    outputs:
      amd64: ${{ steps.digest.outputs.amd64 }}
      arm64: ${{ steps.digest.outputs.arm64 }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Create Container Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}}.{{minor}},prefix=v
            type=semver,pattern={{major}},prefix=v
            type=ref,event=branch
          flavor: latest=false

      - name: Build Image
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        id: build
        with:
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: |
            type=docker
            ${{ startsWith(github.ref, 'refs/tags/') && github.event_name == 'push' && format('type=image,name=ghcr.io/{0}/{1},push-by-digest=true,name-canonical=true,push=true', github.repository_owner, inputs.app) || '' }}
          context: .
          file: ./Dockerfile
          platforms: linux/${{ matrix.platform }}
          provenance: false

      - if: ${{ startsWith(github.ref, 'refs/tags/') && github.event_name == 'push' }}
        name: Export Digest
        id: digest
        run: |
          echo "${{ matrix.platform }}=${{ steps.build.outputs.digest }}" >> $GITHUB_OUTPUT

  release:
    if: ${{ startsWith(github.ref, 'refs/tags/') && github.event_name == 'push' }}
    needs: build-image
    name: Release Container
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.digest.outputs.digest }}
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Create Container Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}}.{{minor}},prefix=v
            type=semver,pattern={{major}},prefix=v
            type=ref,event=branch
          flavor: latest=false

      - name: Push Images
        uses: Noelware/docker-manifest-action@b33ab348026b120a895167160f5605b0197f0862 # 0.4.3
        id: push
        with:
          inputs: ${{ join(fromJSON(steps.meta.outputs.json).tags, ',') }}
          images: >-
            ghcr.io/${{ github.repository }}@${{ needs.build.outputs.amd64 }},
            ghcr.io/${{ github.repository }}@${{ needs.build.outputs.arm64 }}
          push: true

      - name: Export Digest
        id: digest
        run: |
          digest=$(echo "${{ steps.push.outputs.images }}" | grep -oP 'sha256:[^, ]+' | head -n1)
          echo "digest=${digest}" >> $GITHUB_OUTPUT

  sign:
    if: ${{ startsWith(github.ref, 'refs/tags/') && github.event_name == 'push' }}
    needs: release
    name: Sign Contains
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1

      - name: Sign Digest
        run: cosign sign --yes ghcr.io/${{ github.repository }}@${{ needs.release.outputs.digest }}

  attest:
    if: startsWith(github.ref, 'refs/tags/') && github.event_name == 'push'
    needs: release
    name: Attest Container
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Generate SBOM
        uses: anchore/sbom-action@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0.18.0
        with:
          format: spdx-json
          image: ghcr.io/${{ github.repository }}@${{ needs.release.outputs.digest }}
          output-file: external-dns-unifi-webhook-sbom.spdx.json

      - name: Scan SBOM
        uses: anchore/scan-action@7c05671ae9be166aeb155bad2d7df9121823df32 # v6.1.0
        id: scan
        with:
          cache-db: true
          fail-build: false
          sbom: external-dns-unifi-webhook-sbom.spdx.json

      - name: Attest
        uses: actions/attest-sbom@115c3be05ff3974bcbd596578934b3f9ce39bf68 # v2.2.0
        id: attest
        with:
          push-to-registry: true
          sbom-path: external-dns-unifi-webhook-sbom.spdx.json
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ needs.release.outputs.digest }}

      - name: Upload SARIF Report
        uses: github/codeql-action/upload-sarif@6bb031afdd8eb862ea3fc1848194185e076637e5 # v3.28.11
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
